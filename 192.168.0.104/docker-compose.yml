version: "3.4"

services:
  nginx:
    container_name: nginx
    image: nginx
    network_mode: host
    restart: always
    volumes:
      - ${Workdir}/nginx/html:/usr/share/nginx/html
      - ${Workdir}/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ${Workdir}/nginx/conf.d/:/etc/nginx/conf.d/
      - ${Workdir}/nginx/logs/:/var/log/nginx/

  keepalived:
    container_name: keepalived
    image: registry.cn-shenzhen.aliyuncs.com/zengql-release/keepalived:2.0.7
    network_mode: host
    restart: always
    privileged: true
    depends_on:
      - nginx
    volumes:
      - ${Workdir}/keepalived/:/etc/keepalived/

  consul:
    container_name: consul
    command: agent -server -bind=${Host} -client=0.0.0.0 -retry-join=${Server1} -ui
    image: consul
    network_mode: host
    restart: always
    volumes:
      - ${Workdir}/consul/data:/consul/data
      - ${Workdir}/consul/config:/consul/config

  apollo-configservice:
    container_name: apollo-configservice
    image: registry.cn-shenzhen.aliyuncs.com/zengql-release/apollo-configservice:1.0.0
    network_mode: host
    expose:
      - 8080
    restart: always
    volumes:
      - ${Workdir}/apollo/configservice/logs:/opt/logs/100003171
    environment:
      - spring_datasource_url=jdbc:mysql://${MysqlHost}/ApolloConfigDB?characterEncoding=utf8
      - spring_datasource_username=${MysqlUserName}
      - spring_datasource_password=${MysqlPassword}

  apollo-adminservice:
    container_name: apollo-adminservice
    image: registry.cn-shenzhen.aliyuncs.com/zengql-release/apollo-adminservice:1.0.0
    network_mode: host
    expose:
      - 8090
    restart: always
    depends_on:
      - apollo-configservice
    volumes:
      - ${Workdir}/apollo/adminservice/logs:/opt/logs/100003172
    environment:
      - spring_datasource_url=jdbc:mysql://${MysqlHost}/ApolloConfigDB?characterEncoding=utf8
      - spring_datasource_username=${MysqlUserName}
      - spring_datasource_password=${MysqlPassword}

  apollo-portal:
    container_name: apollo-portal
    image: registry.cn-shenzhen.aliyuncs.com/zengql-release/apollo-portal:1.0.0
    network_mode: host
    expose:
      - 8070
    restart: always
    depends_on:
      - apollo-adminservice
    volumes:
      - ${Workdir}/apollo/portal/logs:/opt/logs/100003173
    environment:
      - JAVA_OPTS=-Dpro_meta=http://pro.meta-server.zengql.local
      - spring_datasource_url=jdbc:mysql://${MysqlHost}/ApolloPortalDB?characterEncoding=utf8
      - spring_datasource_username=${MysqlUserName}
      - spring_datasource_password=${MysqlPassword}

  elasticsearch:
    container_name: elasticsearch
    image: registry.cn-shenzhen.aliyuncs.com/zengql-release/elasticsearch:5.6.11
    network_mode: host
    restart: always
    environment:
      - cluster.name=CollectorDBCluster
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - node.master=true
      - network.publish_host=${Host}
      - discovery.zen.ping.unicast.hosts=${Server1},${Server2},${Server3}
      - discovery.zen.minimum_master_nodes=2
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data/

  zookeeper:
    container_name: zookeeper
    image: zookeeper
    network_mode: host
    restart: always
    environment:
      - ZOO_MY_ID=${NodeId}
      - ZOO_SERVERS=server.1=${Server1}:2888:3888 server.2=${Server2}:2888:3888 server.3=${Server3}:2888:3888
    volumes:
      - ${Workdir}/zookeeper/data/:/opt/zookeeper/data/
      - ${Workdir}/zookeeper/logs/:/opt/zookeeper/logs/
      - ${Workdir}/zookeeper/conf/:/opt/zookeeper/conf/

volumes:
  esdata:
    driver: local